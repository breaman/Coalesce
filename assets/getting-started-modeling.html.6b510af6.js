import{_ as a,r as l,o as s,c as d,b as e,d as n,w as i,e as t,a as c}from"./app.6f19168f.js";const r={},u=e("h1",{id:"data-modeling",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#data-modeling","aria-hidden":"true"},"#"),t(" Data Modeling")],-1),_=e("p",null,"At this point, you can open up the newly-created solution in Visual Studio and run your application. However, your application won't do much without a data model, so you will probably want to do the following before running:",-1),h=t("Create an initial "),p=t("Data Model"),m=t(" by adding EF entity classes to the data project and the corresponding "),g=e("code",null,"DbSet<>",-1),y=t(" properties to "),f=e("code",null,"AppDbContext",-1),w=t(". You will notice that the starter project includes a single model, "),b=e("code",null,"ApplicationUser",-1),x=t(", to start with. Feel free to change this model or remove it entirely. Read "),R=t("Entity Models"),k=t(" for more information about creating a data model."),v=c("<li><p>Run <code>dotnet ef migrations add Init</code> (Init can be any name) in the data project to create an initial database migration.</p></li><li><p>Run Coalesce&#39;s code generation by either:</p><ul><li>Running <code>dotnet coalesce</code> in the web project&#39;s root directory</li><li>Running the <code>coalesce</code> npm script (Vue) or gulp task (Knockout) in the Task Runner Explorer</li></ul></li>",2),V=e("p",null,"You're now at a point where you can start creating your own pages!",-1);function C(j,D){const o=l("RouterLink");return s(),d("div",null,[u,_,e("ul",null,[e("li",null,[e("p",null,[h,n(o,{to:"/modeling/model-types/entities.html"},{default:i(()=>[p]),_:1}),m,g,y,f,w,b,x,n(o,{to:"/modeling/model-types/entities.html"},{default:i(()=>[R]),_:1}),k])]),v]),V])}var M=a(r,[["render",C],["__file","getting-started-modeling.html.vue"]]);export{M as default};
