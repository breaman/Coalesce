import{_ as l,r as o,o as p,c as t,d as a,a as r,b as s,e}from"./app.6f19168f.js";const c={},D=r(`<h1 id="selectfilter" tabindex="-1"><a class="header-anchor" href="#selectfilter" aria-hidden="true">#</a> [SelectFilter]</h1><p>Specify a property to restrict dropdown menus by. Values presented will be only those where the value of the foreign property matches the value of the local property.</p><p>The local property name defaults to the same value of the foreign property.</p><p>Additionally, in place of a <code>LocalPropertyName</code> to check against, you may instead specify a static value using <code>StaticPropertyValue</code> to filter by a constant.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>This attribute only affects the generated Knockout HTML views - it does not enforce any relational rules in your data.</p><p>This attribute also currently has no effect against the Vue stack.</p></div><h2 id="example-usage" tabindex="-1"><a class="header-anchor" href="#example-usage" aria-hidden="true">#</a> Example Usage</h2><p>In this example, a dropdown for <code>EmployeeRank</code> created using <code>@Knockout.SelectForObject</code> in cshtml files will only present possible values of <code>EmployeeRank</code> which are valid for the <code>EmployeeType</code> of the <code>Employee</code>.</p><div class="language-c# ext-c# line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Employee</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeTypeId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">EmployeeType</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeType</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeRankId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    [</span><span style="color:#4EC9B0;">SelectFilter</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">ForeignPropertyName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">nameof</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">EmployeeRank</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">EmployeeTypeId</span><span style="color:#D4D4D4;">), </span><span style="color:#9CDCFE;">LocalPropertyName</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">nameof</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Employee</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">EmployeeTypeId</span><span style="color:#D4D4D4;">))]</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">EmployeeRank</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeRank</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">EmployeeRank</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeRankId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeTypeId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">EmployeeType</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">EmployeeType</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-razor ext-razor line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">@(</span><span style="color:#9CDCFE;">Knockout</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">SelectForObject</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Models</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Employee</span><span style="color:#D4D4D4;">&gt;(</span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#9CDCFE;">e</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">EmployeeRank</span><span style="color:#D4D4D4;">)</span><span style="color:#C586C0;">)</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2>`,10),i=s("p",null,"The name of the property on the foreign object to filter against.",-1),y=s("p",null,"The name of another property belonging to the class in which this attribute is used. The results of select lists will be filtered to match this value.",-1),d=s("p",null,[e("Defaults to the value of "),s("code",null,"ForeignPropertyName"),e(" if not set.")],-1),u=s("p",null,[e("If specified, the "),s("code",null,"LocalPropertyName"),e(" will be resolved from the property by this name that resides on the local object.")],-1),C=s("p",null,"This allows for querying against properties that are one level away from the current object.",-1),m=s("p",null,[e("A constant value that the foreign property will be filtered against. This string must be parsable into the foreign property's type to have any effect. If this is set, "),s("code",null,"LocalPropertyName"),e(" will be ignored.")],-1);function h(v,b){const n=o("Prop");return p(),t("div",null,[D,a(n,{def:"public string ForeignPropertyName { get; set; }"}),i,a(n,{def:"public string LocalPropertyName { get; set; }"}),y,d,a(n,{def:"public string LocalPropertyObjectName { get; set; }"}),u,C,a(n,{def:"public string StaticPropertyValue { get; set; }"}),m])}var E=l(c,[["render",h],["__file","select-filter.html.vue"]]);export{E as default};
