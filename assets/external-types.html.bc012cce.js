import{_ as o,r as p,o as t,c as D,b as s,d as l,w as e,e as n,a as c}from"./app.6f19168f.js";const r={},i=s("h1",{id:"external-types",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#external-types","aria-hidden":"true"},"#"),n(" External Types")],-1),y=s("p",null,'In Coalesce, any type which is connected to your data model but is not directly part of it is considered to be an "external type".',-1),d=s("p",null,"The collection of external types for a data model looks like this:",-1),C=n("Take all of the api-served types in your data model. This includes "),u=n("Entity Models"),h=n(" and "),v=n("Custom DTOs"),b=n("."),m=s("li",null,"Take all of the property types, method parameters, and method return types of these types.",-1),g=s("li",null,"Any of these types which are not built-in scalar types and not one of the aforementioned api-served types are external types.",-1),_=s("li",null,"For any external type discovered, any of the property types which qualify under the above rules are also external types.",-1),E={class:"custom-container warning"},f=s("p",{class:"custom-container-title"},"WARNING",-1),x=s("p",null,"Be careful when using types that you do not own for properties and method returns in your data model. When Coalesce generates external type ViewModels and DTOs, it will not stop until it has exhausted all paths that can be reached by following public property types and method returns.",-1),A=n("In general, you should only expose types that you have created so that you will always have full control over them. Mark any properties you don't wish to expose with "),F=n("[InternalUse]"),B=n(", or make those members non-public."),w=s("h2",{id:"generated-code",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#generated-code","aria-hidden":"true"},"#"),n(" Generated Code")],-1),P=s("p",null,"For each external type found in your application's model, Coalesce will generate:",-1),T=n("A "),k=n("Generated DTO"),I=n("A "),M=n("TypeScript Model"),N=c(`<h2 id="example-data-model" tabindex="-1"><a class="header-anchor" href="#example-data-model" aria-hidden="true">#</a> Example Data Model</h2><p>For example, in the following scenario, the following classes are considered as external types:</p><ul><li><code>PluginMetadata</code>, exposed through a getter-only property on <code>ApplicationPlugin</code>.</li><li><code>PluginResult</code>, exposed through a method return on <code>ApplicationPlugin</code>.</li></ul><p><code>PluginHandler</code> is not because it not exposed by the model, neither directly nor through any of the other external types.</p><div class="language-c# ext-c# line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">AppDbContext</span><span style="color:#D4D4D4;"> : </span><span style="color:#4EC9B0;">DbContext</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DbSet</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Application</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">Applications</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DbSet</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">ApplicationPlugin</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">ApplicationPlugins</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Application</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">ApplicationId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Name</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ICollection</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">ApplicationPlugin</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">Plugins</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ApplicationPlugin</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">ApplicationPluginId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">ApplicationId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Application</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Application</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">TypeName</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">private</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginHandler</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">GetInstance</span><span style="color:#D4D4D4;">() =&gt; </span></span>
<span class="line"><span style="color:#D4D4D4;">        ((</span><span style="color:#4EC9B0;">PluginHandler</span><span style="color:#D4D4D4;">)</span><span style="color:#9CDCFE;">Activator</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">CreateInstance</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Type</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">GetType</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">TypeName</span><span style="color:#D4D4D4;">)));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginMetadata</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Metadata</span><span style="color:#D4D4D4;"> =&gt; </span><span style="color:#DCDCAA;">GetInstance</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">GetMetadata</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginResult</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Invoke</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">) =&gt; </span><span style="color:#DCDCAA;">GetInstance</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">Invoke</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Application</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginHandler</span><span style="color:#D4D4D4;"> { </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginMetadata</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">GetMetadata</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginResult</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">Invoke</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Application</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">app</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">action</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">data</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginMetadata</span><span style="color:#D4D4D4;"> { </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">bool</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Name</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Version</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">ICollection</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;">&gt; </span><span style="color:#9CDCFE;">Actions</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">abstract</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">PluginResult</span><span style="color:#D4D4D4;"> { </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">bool</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Success</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Message</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="loading-serialization" tabindex="-1"><a class="header-anchor" href="#loading-serialization" aria-hidden="true">#</a> Loading &amp; Serialization</h2>`,6),G=n("External types have slightly different behavior when undergoing serialization to be sent to the client. Unlike database-mapped types which are subject to the rules of "),R=n("Include Tree"),S=n(", external types ignore the Include Tree when being mapped to DTOs for serialization. Read "),V=n("External Type Caveats"),z=n(" for a more detailed explanation of this exception.");function H(O,L){const a=p("RouterLink");return t(),D("div",null,[i,y,d,s("ol",null,[s("li",null,[C,l(a,{to:"/modeling/model-types/entities.html"},{default:e(()=>[u]),_:1}),h,l(a,{to:"/modeling/model-types/dtos.html"},{default:e(()=>[v]),_:1}),b]),m,g,_]),s("div",E,[f,x,s("p",null,[A,l(a,{to:"/modeling/model-components/attributes/internal-use.html"},{default:e(()=>[F]),_:1}),B])]),w,P,s("ul",null,[s("li",null,[T,l(a,{to:"/stacks/agnostic/dtos.html"},{default:e(()=>[k]),_:1})]),s("li",null,[I,l(a,{to:"/stacks/disambiguation/external-view-model.html"},{default:e(()=>[M]),_:1})])]),N,s("p",null,[G,l(a,{to:"/concepts/include-tree.html"},{default:e(()=>[R]),_:1}),S,l(a,{to:"/concepts/include-tree.html#external-type-caveats"},{default:e(()=>[V]),_:1}),z])])}var W=o(r,[["render",H],["__file","external-types.html.vue"]]);export{W as default};
