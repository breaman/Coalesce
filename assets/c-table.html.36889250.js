import{_ as p,r as t,o as c,c as i,b as e,d as n,w as a,e as s,a as r}from"./app.6f19168f.js";const d={},D=e("h1",{id:"c-table",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#c-table","aria-hidden":"true"},"#"),s(" c-table")],-1),y=s("A table component for displaying the contents of a "),u=s("ListViewModel"),h=s(". Also supports modifying the list's [sort parameters](/modeling/model-components/data-sources.md#standard-parameters) by clicking on column headers. Pairs well with a "),m=s("c-list-pagination"),_=s("."),v={class:"table-of-contents"},b=s("Example Usage"),C=s("Props"),f=s("Slots"),g=e("h2",{id:"example-usage",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#example-usage","aria-hidden":"true"},"#"),s(" Example Usage")],-1),E=s("A simple table, rendering the items of a "),x=s("ListViewModel"),w=s(":"),F=r(`<div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-table</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>A more complex example using more of the available options:</p><div class="language-vue-html ext-vue-html line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-table</span></span>
<span class="line"><span style="color:#D4D4D4;">  :</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">list</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  :</span><span style="color:#9CDCFE;">props</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">&#39;firstName&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#CE9178;">&#39;lastName&#39;</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">  :</span><span style="color:#9CDCFE;">extra-headers</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">[</span><span style="color:#CE9178;">&#39;Actions&#39;</span><span style="color:#D4D4D4;">]</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#D4D4D4;"> #</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">append</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">{</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">}</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">td</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">v-btn</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">title</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;Edit&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">text</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">icon</span></span>
<span class="line"><span style="color:#D4D4D4;">        :</span><span style="color:#9CDCFE;">to</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;">{</span><span style="color:#9CDCFE;">name:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;edit-person&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">params:</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$primaryKey</span><span style="color:#D4D4D4;"> }}</span><span style="color:#D4D4D4;">&quot;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">i</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;fa fa-edit&quot;</span><span style="color:#808080;">&gt;&lt;/</span><span style="color:#569CD6;">i</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">v-btn</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">td</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">c-table</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2>`,4),k=s("The "),q=s("ListViewModel"),A=s(" to display pagination information for."),V=e("p",null,"If provided, specifies which properties, and their ordering, should be given a column in the table.",-1),L=s("If not provided, all non-key columns that aren't annotated with "),N=s("[Hidden(HiddenAttribute.Areas.List)]"),P=s(" are given a column."),S=e("p",null,[s("The text contents of one or more extra "),e("code",null,"th"),s(" elements to render in the table. Should be used in conjunction with the "),e("code",null,"item.append"),s(" slot.")],-1),T=s("If true, properties in each table cell will be rendered with "),H=s("c-input"),I=s(". Non-editable properties will be rendered in accordance with the value of the "),M=e("code",null,"admin",-1),B=s(" prop."),R=s("If true, properties in each table cell will be rendered with "),U=s("c-admin-display"),j=s(" instead of "),z=s("c-display"),K=s("."),$=e("h2",{id:"slots",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#slots","aria-hidden":"true"},"#"),s(" Slots")],-1),G=e("p",null,[e("code",null,"item.append"),s(" - A slot rendered after the "),e("code",null,"td"),s(" elements on each row that render the properties of each item in the table. Should be provided zero or more additional "),e("code",null,"td"),s(" elements. The number should match the number of additional headers provided to the "),e("code",null,"extraHeaders"),s(" prop.")],-1);function J(O,Q){const l=t("RouterLink"),o=t("Prop");return c(),i("div",null,[D,e("p",null,[y,n(l,{to:"/stacks/vue/layers/viewmodels.html"},{default:a(()=>[u]),_:1}),h,n(l,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-list-pagination.html"},{default:a(()=>[m]),_:1}),_]),e("nav",v,[e("ul",null,[e("li",null,[n(l,{to:"#example-usage"},{default:a(()=>[b]),_:1})]),e("li",null,[n(l,{to:"#props"},{default:a(()=>[C]),_:1})]),e("li",null,[n(l,{to:"#slots"},{default:a(()=>[f]),_:1})])])]),g,e("p",null,[E,n(l,{to:"/stacks/vue/layers/viewmodels.html"},{default:a(()=>[x]),_:1}),w]),F,n(o,{def:"list: ListViewModel",lang:"ts"}),e("p",null,[k,n(l,{to:"/stacks/vue/layers/viewmodels.html"},{default:a(()=>[q]),_:1}),A]),n(o,{def:"props?: string[]",lang:"ts"}),V,e("p",null,[L,n(l,{to:"/modeling/model-components/attributes/hidden.html"},{default:a(()=>[N]),_:1}),P]),n(o,{def:"extraHeaders?: string[]",lang:"ts"}),S,n(o,{def:"editable: boolean = false",lang:"ts"}),e("p",null,[T,n(l,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-input.html"},{default:a(()=>[H]),_:1}),I,M,B]),n(o,{def:"admin: boolean = false",lang:"ts"}),e("p",null,[R,n(l,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-admin-display.html"},{default:a(()=>[U]),_:1}),j,n(l,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-display.html"},{default:a(()=>[z]),_:1}),K]),$,G])}var X=p(d,[["render",J],["__file","c-table.html.vue"]]);export{X as default};
