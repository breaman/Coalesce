import{_ as c,r as p,o as r,c as i,b as n,d as e,w as l,a as t,e as s}from"./app.6f19168f.js";const d={},D=t(`<h1 id="getting-started-with-vue" tabindex="-1"><a class="header-anchor" href="#getting-started-with-vue" aria-hidden="true">#</a> Getting Started with Vue</h1><h2 id="creating-a-project" tabindex="-1"><a class="header-anchor" href="#creating-a-project" aria-hidden="true">#</a> Creating a Project</h2><p>The quickest and easiest way to create a new Coalesce Vue application is to use the <code>dotnet new</code> template. In your favorite shell:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#D4D4D4;">mkdir MyCompany.MyProject</span></span>
<span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> MyCompany.MyProject</span></span>
<span class="line"><span style="color:#D4D4D4;">dotnet new --install IntelliTect.Coalesce.Vue.Template</span></span>
<span class="line"><span style="color:#D4D4D4;">dotnet new coalescevue</span></span>
<span class="line"><span style="color:#DCDCAA;">cd</span><span style="color:#D4D4D4;"> *.Web</span></span>
<span class="line"><span style="color:#D4D4D4;">npm ci</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://www.nuget.org/packages/IntelliTect.Coalesce.Vue.Template/",target:"_blank",rel:"noopener noreferrer"},u=n("img",{src:"https://img.shields.io/nuget/v/IntelliTect.Coalesce.Vue.Template",alt:""},null,-1),h=s(" \u2022 "),m={href:"https://github.com/IntelliTect/Coalesce.Vue.Template",target:"_blank",rel:"noopener noreferrer"},v=s("View on GitHub"),_=n("h2",{id:"project-structure",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#project-structure","aria-hidden":"true"},"#"),s(" Project Structure")],-1),C={class:"custom-container tip"},g=n("p",{class:"custom-container-title"},"Important",-1),b=s("The Vue template is based on "),f={href:"https://cli.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},w=s("Vue CLI"),E=s(". You are strongly encouraged to read through at least the first few pages of the "),k={href:"https://cli.vuejs.org/guide/",target:"_blank",rel:"noopener noreferrer"},F=s("Vue CLI Documentation"),V=s(" before getting started on any development."),x=t('<p>The structure of the Web project follows the conventions of both ASP.NET Core and Vue CLI. The Vue-specific folders are as follows:</p><ul><li><code>/src</code> - Files that should be compiled into your application. CSS/SCSS, TypeScript, Vue SFCs, and so on.</li><li><code>/public</code> - Static assets that should be served as files. Includes index.html, the root document of the application.</li><li><code>/tests</code> - Jest unit tests.</li><li><code>/wwwroot</code> - Target for compiled output.</li></ul><p>During development, no special tooling is required to build your frontend code. <code>WebpackDevMiddleware</code> in ASP.NET Core will take care of that automatically when the application starts.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If developing with Visual Studio, you are strongly encouraged to disable Visual Studio&#39;s built-in automatic NPM package restore functionality (<code>Options &gt; Projects and Solutions &gt; Web Package Management &gt; Package Restore</code>).</p><p>This feature of Visual Studio fails to respect your <code>package.lock.json</code> file, and the version of NPM that Visual Studio comes with tends to be quite old and will behave differently from the <code>npm</code> on your system&#39;s $PATH.</p><p>You should manually restore your packages with <code>npm ci</code> (when you haven&#39;t tried to change any versions) or <code>npm i</code> (when installing new packages or upgrading versions).</p></div><h2 id="data-modeling" tabindex="-1"><a class="header-anchor" href="#data-modeling" aria-hidden="true">#</a> Data Modeling</h2><p>At this point, you can open up the newly-created solution in Visual Studio and run your application. However, your application won&#39;t do much without a data model, so you will probably want to do the following before running:</p>',6),A=s("Create an initial "),P=s("Data Model"),T=s(" by adding EF entity classes to the data project and the corresponding "),I=n("code",null,"DbSet<>",-1),S=s(" properties to "),j=n("code",null,"AppDbContext",-1),q=s(". You will notice that the starter project includes a single model, "),M=n("code",null,"ApplicationUser",-1),B=s(", to start with. Feel free to change this model or remove it entirely. Read "),N=s("Entity Models"),W=s(" for more information about creating a data model."),R=t("<li><p>Run <code>dotnet ef migrations add Init</code> (Init can be any name) in the data project to create an initial database migration.</p></li><li><p>Run Coalesce&#39;s code generation by either:</p><ul><li>Running <code>dotnet coalesce</code> in the web project&#39;s root directory</li><li>Running the <code>coalesce</code> npm script (Vue) or gulp task (Knockout) in the Task Runner Explorer</li></ul></li>",2),L=n("p",null,"You're now at a point where you can start creating your own pages!",-1),H=n("h2",{id:"building-pages-features",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#building-pages-features","aria-hidden":"true"},"#"),s(" Building Pages & Features")],-1),Y=s("Lets say we've created a "),O=s("model"),G=s(" called "),$=n("code",null,"Person",-1),J=s(" as follows, and we've ran code generation with "),K=n("code",null,"dotnet coalesce",-1),U=s(":"),z=t(`<div class="language-c# ext-c# line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#569CD6;">namespace</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">MyApplication</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Data</span><span style="color:#D4D4D4;">.</span><span style="color:#4EC9B0;">Models</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Person</span></span>
<span class="line"><span style="color:#D4D4D4;">    {</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">int</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">PersonId</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">string</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">Name</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">public</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">DateTimeOffset</span><span style="color:#D4D4D4;">? </span><span style="color:#9CDCFE;">BirthDate</span><span style="color:#D4D4D4;"> { </span><span style="color:#569CD6;">get</span><span style="color:#D4D4D4;">; </span><span style="color:#569CD6;">set</span><span style="color:#D4D4D4;">; }</span></span>
<span class="line"><span style="color:#D4D4D4;">    }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),Q=s("We can create a details page for a Person by creating a "),X={href:"https://vuejs.org/v2/guide/single-file-components.html",target:"_blank",rel:"noopener noreferrer"},Z=s("Single File Component"),ss=s(" in "),ns=n("code",null,"MyApplication.Web/src/views/person-details.vue",-1),es=s(":"),as=t(`<div class="language-vue ext-vue line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">dl</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">dt</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Name</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">dt</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">dd</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;name&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">dd</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">dt</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Date of Birth</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">dt</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">dd</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">c-display</span><span style="color:#D4D4D4;"> :</span><span style="color:#9CDCFE;">model</span><span style="color:#D4D4D4;">=</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">for</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;birthDate&quot;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">format</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;M/d/yyyy&quot;</span><span style="color:#D4D4D4;"> /</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">dd</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">dl</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">lang</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;ts&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;"> </span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">Vue</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Component</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Watch</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">Prop</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;vue-property-decorator&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">PersonViewModel</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&quot;@/viewmodels.g&quot;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">@</span><span style="color:#DCDCAA;">Component</span><span style="color:#D4D4D4;">({})</span></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">class</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">extends</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Vue</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  @</span><span style="color:#DCDCAA;">Prop</span><span style="color:#D4D4D4;">({ </span><span style="color:#9CDCFE;">required:</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">true</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">type:</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Number</span><span style="color:#D4D4D4;"> })</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">!: </span><span style="color:#4EC9B0;">number</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">PersonViewModel</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">created</span><span style="color:#D4D4D4;">() {</span></span>
<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">person</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">$load</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;">);</span></span>
<span class="line"><span style="color:#D4D4D4;">  }</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),os={class:"custom-container tip"},ls=n("p",{class:"custom-container-title"},"Note",-1),ts=s("In the code above, "),ps=s("c-display"),cs=s(" is a component that comes from the "),rs=s("Vuetify Components"),is=s(" for Coalesce."),ds=s("For simple property types like "),Ds=n("code",null,"string",-1),ys=s(" and "),us=n("code",null,"number",-1),hs=s(" you can always use simple template interpolation syntax, but for more complex properties like dates, "),ms=s("c-display"),vs=s(" is handy to use because it includes features like built-in date formatting."),_s={class:"custom-container tip"},Cs=n("p",{class:"custom-container-title"},"TIP",-1),gs=s("The code above uses "),bs={href:"https://class-component.vuejs.org/",target:"_blank",rel:"noopener noreferrer"},fs=s("vue-class-component"),ws=s(" and "),Es={href:"https://github.com/kaorun343/vue-property-decorator",target:"_blank",rel:"noopener noreferrer"},ks=s("vue-property-decorator"),Fs=s(" to define the component."),Vs=s("These libraries provide an alternative to the default component declaration syntax in "),xs={href:"https://vuejs.org/",target:"_blank",rel:"noopener noreferrer"},As=s("Vue"),Ps=s(". However, you must be aware of the "),Ts={href:"https://class-component.vuejs.org/guide/caveats.html",target:"_blank",rel:"noopener noreferrer"},Is=s("Caveats"),Ss=s(" if you want to use these tools to build your own class-style components."),js=t(`<p>We then need to add route to this new view. In <code>MyApplication.Web/src/router.ts</code>, add a new item to the <code>routes</code> array:</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// At the top of the file, import the component:</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">PersonDetails</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">from</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;@/views/person-details.vue&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="shiki" style="background-color:#1E1E1E;"><code><span class="line"><span style="color:#6A9955;">// In the \`routes\` array, add the following item:</span></span>
<span class="line"><span style="color:#D4D4D4;">{</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">path</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;/person/:id&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">name</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">&#39;person-details&#39;</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">component</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">PersonDetails</span><span style="color:#D4D4D4;">,</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C8C8C8;">props</span><span style="color:#D4D4D4;">: </span><span style="color:#9CDCFE;">route</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> ({ </span><span style="color:#9CDCFE;">id:</span><span style="color:#D4D4D4;"> +</span><span style="color:#9CDCFE;">route</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">params</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">id</span><span style="color:#D4D4D4;"> }),</span></span>
<span class="line"><span style="color:#D4D4D4;">},</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>With these pieces in place, we now have a functioning page that will display details about a person. We can start up the application (or, if it was already running, refresh the page) and navigate to <code>/person/1</code> (assuming a person with ID 1 exists - if not, navigate to <code>/admin/Person</code> and create one).</p>`,4),qs=s("From this point, you can start adding more fields, more features, and more flair to the page. Check out all the other documentation in the sidebar to see what else Coalesce has to offer, including the "),Ms=s("Vue Overview"),Bs=s(".");function Ns(Ws,Rs){const a=p("ExternalLinkIcon"),o=p("RouterLink");return r(),i("div",null,[D,n("p",null,[n("a",y,[u,e(a)]),h,n("a",m,[v,e(a)])]),_,n("div",C,[g,n("p",null,[b,n("a",f,[w,e(a)]),E,n("a",k,[F,e(a)]),V])]),x,n("ul",null,[n("li",null,[n("p",null,[A,e(o,{to:"/modeling/model-types/entities.html"},{default:l(()=>[P]),_:1}),T,I,S,j,q,M,B,e(o,{to:"/modeling/model-types/entities.html"},{default:l(()=>[N]),_:1}),W])]),R]),L,H,n("p",null,[Y,e(o,{to:"/modeling/model-types/entities.html"},{default:l(()=>[O]),_:1}),G,$,J,K,U]),z,n("p",null,[Q,n("a",X,[Z,e(a)]),ss,ns,es]),as,n("div",os,[ls,n("p",null,[ts,e(o,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-display.html"},{default:l(()=>[ps]),_:1}),cs,e(o,{to:"/stacks/vue/coalesce-vue-vuetify/overview.html"},{default:l(()=>[rs]),_:1}),is]),n("p",null,[ds,Ds,ys,us,hs,e(o,{to:"/stacks/vue/coalesce-vue-vuetify/components/c-display.html"},{default:l(()=>[ms]),_:1}),vs])]),n("div",_s,[Cs,n("p",null,[gs,n("a",bs,[fs,e(a)]),ws,n("a",Es,[ks,e(a)]),Fs]),n("p",null,[Vs,n("a",xs,[As,e(a)]),Ps,n("a",Ts,[Is,e(a)]),Ss])]),js,n("p",null,[qs,e(o,{to:"/stacks/vue/overview.html"},{default:l(()=>[Ms]),_:1}),Bs])])}var Hs=c(d,[["render",Ns],["__file","getting-started.html.vue"]]);export{Hs as default};
